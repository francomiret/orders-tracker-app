generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Order {
  id            String      @id @default(cuid())
  customer_name String?
  address       String?
  status        OrderStatus @default(CREATED)
  created_at    DateTime    @default(now()) @map("created_at")
  updated_at    DateTime    @updatedAt @map("updated_at")

  events OrderEvent[]
  alerts Alert[]

  @@map("orders")
}

model OrderEvent {
  id         Int            @id @default(autoincrement())
  order_id   String         @map("order_id")
  event_type OrderEventType @map("event_type")
  timestamp  DateTime       @default(now())

  order Order @relation(fields: [order_id], references: [id], onDelete: Cascade)

  @@unique([order_id, event_type])
  @@map("order_events")
}

model AlertRule {
  id        Int           @id @default(autoincrement())
  rule_type AlertRuleType @map("rule_type")
  threshold Int
  active    Boolean       @default(true)

  @@map("alert_rules")
}

model Alert {
  id           Int      @id @default(autoincrement())
  order_id     String   @map("order_id")
  alert_type   String   @map("alert_type")
  message      String
  triggered_at DateTime @default(now()) @map("triggered_at")
  resolved     Boolean  @default(false)

  order Order @relation(fields: [order_id], references: [id], onDelete: Cascade)

  @@map("alerts")
}

enum OrderStatus {
  CREATED
  PREPARING
  DISPATCHED
  DELIVERED
}

enum OrderEventType {
  CREATED
  PREPARING
  DISPATCHED
  DELIVERED
}

enum AlertRuleType {
  NOT_DISPATCHED_IN_X_DAYS
  NOT_DELIVERED_SAME_DAY
}
